{"version":3,"sources":["components/Post/Post.module.css","components/Comment/Comment.module.css","components/Header/Header.module.css","components/SearchBar/SearchBar.module.css","components/Community/Community.module.css","containers/Communities/Communities.module.css","containers/Posts/Posts.module.css","containers/Comments/Comments.module.css","components/LoadingSpinner/LoadingSpinner.module.css","reducers/postsReducer/postsReducer.js","utils/URLs.js","components/SearchBar/SearchBar.js","components/Header/Header.js","components/Community/Community.js","reducers/commentsReducer/commentsReducer.js","containers/Communities/Communities.js","utils/ErrorBoundary/ErrorBoundary.js","components/Comment/Comment.js","containers/Comments/Comments.js","components/Post/Post.js","components/ErrorComponent/ErrorComponent.js","components/LoadingSpinner/LoadingSpinner.js","containers/Posts/Posts.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","fetchPosts","createAsyncThunk","term","thunkAPI","a","fetch","response","ok","json","data","postsReducer","createSlice","name","initialState","posts","isLoading","error","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","getCommunityURL","community","encodeURI","SearchBar","dispatch","useDispatch","useState","input","setInput","className","styles","placeholder","onChange","event","inputString","target","value","header","Header","href","style","color","props","Community","onClick","clicked","fetchComments","link","commentsReducer","comments","deleteComments","actions","Communities","activeCommunity","setActiveCommunity","communities","map","toUpperCase","React","Component","Comment","author","text","Author","CommentText","Comments","commentsData","useSelector","setComments","useEffect","postId","children","id","comment","body","Post","commentsHidden","setCommentsHidden","title","url","permalink","upvotes","endsWith","PostImage","alt","src","Text","BottomSection","BottomSectionInfo","Votes","FetchCommentsBtn","prevState","console","log","ErrorComponent","message","LoadingSpinner","ldsDefault","Posts","setPosts","isPostsLoading","responseData","length","post","selftext","ups","downs","downvotes","Main","params","useParams","App","routes","path","element","exact","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6df841c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__3Qi_F\",\"Text\":\"Post_Text__10iDb\",\"PostImage\":\"Post_PostImage__-IAZc\",\"PostVideo\":\"Post_PostVideo__rP1Lo\",\"Comments\":\"Post_Comments__2qRsG\",\"FetchCommentsBtn\":\"Post_FetchCommentsBtn__KTxsi\",\"BottomSection\":\"Post_BottomSection__1wrbK\",\"BottomSectionInfo\":\"Post_BottomSectionInfo__34XaG\",\"Votes\":\"Post_Votes__Gn37z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comment_Comment__1ulVA\",\"Author\":\"Comment_Author__25z0A\",\"CommentText\":\"Comment_CommentText__3z0BK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3tb1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__1SDbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Community\":\"Community_Community__2FGMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Communities\":\"Communities_Communities__w1fut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__SP5zO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comments\":\"Comments_Comments__14yZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDefault\":\"LoadingSpinner_ldsDefault__1spd4\"};","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchPosts = createAsyncThunk(\r\n  \"posts/fetchPosts\",\r\n  async (term, thunkAPI) => {\r\n    try {\r\n      const response = await fetch(term);\r\n      // console.log(response);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n      } \r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n);\r\n\r\nconst postsReducer = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    posts: [],\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchPosts.pending]: (state, action) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [fetchPosts.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.posts = action.payload;\r\n    },\r\n    [fetchPosts.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.posts = null;\r\n      state.error = action.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport default postsReducer.reducer;\r\n","export const getSearchURL = (searchTerm) => {\r\n  return encodeURI(`https://www.reddit.com/search.json?q=${searchTerm}`);\r\n};\r\n\r\nexport const getCommunityURL = (community) => {\r\n  return encodeURI(`https://www.reddit.com/r/${community}.json`);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./SearchBar.module.css\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { fetchPosts } from \"../../reducers/postsReducer/postsReducer\";\r\nimport { getSearchURL } from \"../../utils/URLs\";\r\n\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSearch = (event) => {\r\n    const inputString = event.target.value;\r\n    setInput(inputString);\r\n    if (!input) {\r\n      return;\r\n    }\r\n\r\n    dispatch(fetchPosts(getSearchURL(input)));\r\n  };\r\n\r\n  return (\r\n    <section className={styles.SearchBar}>\r\n      <input placeholder=\"Type to search\" onChange={handleSearch} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\n\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nconst header = () => {\r\n  return (\r\n    <header className={styles.Header}>\r\n      <h1>\r\n        <a href='http://localhost:3000'><span style={{ color: \"red\" }}>Top</span>Reddit</a>\r\n      </h1>\r\n      <SearchBar />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Community.module.css\";\r\n\r\nconst community = (props) => {\r\n  return (\r\n    <section className={styles.Community}>\r\n      <li onClick={props.clicked}>\r\n        <em>{props.name}</em>\r\n      </li>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default community;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchComments = createAsyncThunk(\r\n  \"comments/fetchComments\",\r\n  async (link, thunkAPI) => {\r\n    const response = await fetch(`https://www.reddit.com${link}.json`);\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nconst commentsReducer = createSlice({\r\n  name: \"comments\",\r\n  initialState: {\r\n    comments: [],\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    deleteComments(state, action) {\r\n      state.comments = [];\r\n      state.isLoading = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchComments.pending]: (state, action) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [fetchComments.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.comments = action.payload;\r\n    },\r\n    [fetchComments.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.comments = null;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { deleteComments } = commentsReducer.actions;\r\n\r\nexport default commentsReducer.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Community from \"../../components/Community/Community\";\r\nimport styles from \"./Communities.module.css\";\r\n\r\nimport { fetchPosts } from \"../../reducers/postsReducer/postsReducer\";\r\nimport {deleteComments} from '../../reducers/commentsReducer/commentsReducer';\r\nimport { getCommunityURL } from \"../../utils/URLs\";\r\n\r\nconst Communities = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [activeCommunity, setActiveCommunity] = useState(\"\");\r\n\r\n  const switchCommunity = (name) => {\r\n    setActiveCommunity(name);\r\n    dispatch(deleteComments());\r\n    dispatch(fetchPosts(getCommunityURL(name)));\r\n  };\r\n\r\n  const data = props.communities.map((community) => (\r\n    <Community key={community} name={community} clicked={() => switchCommunity(community)} />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <ul className={styles.Communities}>{data}</ul>\r\n      <h2>{activeCommunity.toUpperCase()}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Communities;\r\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from \"react\";\r\n\r\nimport styles from './Comment.module.css';\r\n\r\nconst Comment = (props) => {\r\n  const { author, text } = props;\r\n  \r\n  return (\r\n    <div className={styles.Comment}>\r\n      <strong><em className={styles.Author}>{author}</em></strong>\r\n      <p className={styles.CommentText}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./Comments.module.css\";\r\n\r\n// import LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\nimport ErrorBoundary from \"../../utils/ErrorBoundary/ErrorBoundary\";\r\n\r\nimport Comment from \"../../components/Comment/Comment\";\r\n\r\nconst Comments = (props) => {\r\n  const commentsData = useSelector((state) => state.comments.comments);\r\n  const [comments, setComments] = useState([]);\r\n  // const isLoading = useSelector((state) => state.comments.isLoading);\r\n  const error = useSelector((state) => state.comments.error);\r\n\r\n  useEffect(() => {\r\n    if (commentsData[1] && commentsData[0]) {\r\n      // make sure the comments are being assigned only to its post\r\n      if (props.postId !== commentsData[0].data.children[0].data.id) {\r\n        return;\r\n      }\r\n      setComments(commentsData[1].data);\r\n    }\r\n  }, [commentsData]);\r\n\r\n  if (error !== null) {\r\n    return <h2>Error fetching data...</h2>;\r\n  }\r\n\r\n  if (comments.children) {\r\n\r\n    return (\r\n      <section className={styles.Comments}>\r\n        {comments.children.map((comment) => {\r\n          const { author, body, id } = comment.data;\r\n          return <Comment key={id} author={author} text={body} />;\r\n        })}\r\n      </section>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n// export default <ErrorBoundary><Comments /></ErrorBoundary>;\r\nexport default Comments;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./Post.module.css\";\r\n\r\nimport {\r\n  fetchComments,\r\n  deleteComments,\r\n} from \"../../reducers/commentsReducer/commentsReducer\";\r\n\r\nimport Comments from \"../../containers/Comments/Comments\";\r\n\r\nconst Post = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [commentsHidden, setCommentsHidden] = useState(false);\r\n  const { id, title, url, permalink, author, text, upvotes } = props;\r\n\r\n  const getImages = () => {\r\n    if (url.endsWith(\"jpg\") || url.endsWith(\"png\")) {\r\n      return <img className={styles.PostImage} alt={title} src={props.url} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const handlePostComments = () => {\r\n    if (!commentsHidden) {\r\n      dispatch(fetchComments(permalink));\r\n    } else {\r\n      dispatch(deleteComments());\r\n    }\r\n    setCommentsHidden((prevState) => console.log(prevState));\r\n  };\r\n\r\n  return (\r\n    <article className={styles.Post}>\r\n      <a href={url} target=\"_blank\">\r\n        <h3>{title}</h3>\r\n      </a>\r\n      <h5>{author}</h5>\r\n      {getImages()}\r\n      <p className={styles.Text}>{text}</p>\r\n      <hr />\r\n      <section className={styles.BottomSection}>\r\n        <section className={styles.BottomSectionInfo}>\r\n          <div className={styles.Votes}>\r\n            <em>{upvotes} upvotes</em>\r\n            <br />\r\n          </div>\r\n          <button\r\n            className={styles.FetchCommentsBtn}\r\n            onClick={handlePostComments}\r\n          >\r\n            <strong>Comments</strong>\r\n          </button>\r\n        </section>\r\n        <section className={styles.Comments}>\r\n          <Comments postId={id} />\r\n        </section>\r\n      </section>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nconst ErrorComponent = (props) => {\r\n  if (props.error) {\r\n    return <h2>{props.error.message}</h2>;\r\n  }\r\n  return (\r\n    <section>\r\n      <h2>Something went wrong.</h2>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React from \"react\";\r\n\r\nimport styles from './LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className={styles.ldsDefault}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./Posts.module.css\";\r\n\r\nimport Post from \"../../components/Post/Post\";\r\nimport ErrorComponent from '../../components/ErrorComponent/ErrorComponent';\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\r\n\r\nconst Posts = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const isPostsLoading = useSelector((state) => state.posts.isLoading);\r\n  const error = useSelector((state) => state.posts.error);\r\n  const responseData = useSelector((state) => state.posts.posts);\r\n\r\n  useEffect(() => {\r\n\r\n    // if there's no data, display\r\n    if(!responseData) {\r\n      return <ErrorComponent />;\r\n    }\r\n\r\n    if (responseData.data) {\r\n      setPosts(responseData.data.children);\r\n    }\r\n  }, [responseData]);\r\n\r\n  if (error !== null) {\r\n    return <ErrorComponent error={error} />;\r\n  }\r\n\r\n  if (isPostsLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (posts.length > 0) {\r\n    return (\r\n      <section className={styles.Posts}>\r\n        {posts.map((post) => {\r\n          const { id, author, title, selftext, url, ups, downs, permalink } =\r\n            post.data;\r\n          return (\r\n            <Post\r\n              key={id}\r\n              id={id}\r\n              title={title}\r\n              author={author}\r\n              text={selftext}\r\n              url={url}\r\n              upvotes={ups}\r\n              downvotes={downs}\r\n              permalink={permalink}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Communities from \"./containers/Communities/Communities\";\r\nimport Posts from \"./containers/Posts/Posts\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { fetchPosts } from \"./reducers/postsReducer/postsReducer\";\r\nimport { getCommunityURL } from \"./utils/URLs\";\r\n\r\nconst Main = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const communities = [\r\n    \"fitness\",\r\n    \"programming\",\r\n    \"running\",\r\n    \"boxing\",\r\n    \"yoga\",\r\n    \"weight loss\",\r\n    \"entrepreneurship\",\r\n    \"business\",\r\n    \"parenting\",\r\n    \"calisthenics\",\r\n    \"webdev\",\r\n  ];\r\n\r\n  if (params.community) {\r\n    dispatch(fetchPosts(getCommunityURL(params.community)));\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <main>\r\n        {/* Search input area TBD */}\r\n        <Communities communities={communities} />\r\n        <Posts />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Main from \"./Main\";\n\nimport { fetchPosts } from \"./reducers/postsReducer/postsReducer\";\nimport { deleteComments } from \"./reducers/commentsReducer/commentsReducer\";\nimport { getCommunityURL } from \"./utils/URLs\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(deleteComments());\n    dispatch(fetchPosts(getCommunityURL(\"popular\")));\n  }, []);\n\n  const routes = (\n    <Routes>\n      <Route path=\":community\" element={<Main />} />\n      <Route path=\"/\" exact element={<Main />} />\n    </Routes>\n  );\n\n  return <React.Fragment>{routes}</React.Fragment>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport postsReducer from \"./reducers/postsReducer/postsReducer\";\nimport commentsReducer from \"./reducers/commentsReducer/commentsReducer\";\n\nconst store = configureStore({\n  reducer: {\n    posts: postsReducer,\n    comments: commentsReducer,\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}